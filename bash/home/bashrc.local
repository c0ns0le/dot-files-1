
## function to source files
source_file() { [ -r "$1" ] && source "$1"; }

## My custom bash environment
source_file "$HOME/.osxrc"
source_file "$HOME/.bashrc.git"
source_file "$HOME/.bashrc.vim"
source_file "$HOME/.bashrc.function"
source_file "$HOME/.bashrc.alias"
source_file "$HOME/.bashrc.battery"
source_file "$HOME/.bashrc.export"
source_file "$HOME/.bashrc.ps1"
source_file "$HOME/.bashrc.saveology"

source_file "$HOME/.bashrc.autocomplete.git"

source_file "$HOME/.rvm/scripts/rvm"
source_file "$rvm_path/scripts/completion"

export HASHROCKET_DIR="$HOME/hashrocket"
export REPO_DIR="$HASHROCKET_DIR"

alias glog='git log --oneline --decorate --name-status'
alias glogn='git log --oneline --decorate --name-only'

export PATH="$PATH:$HOME/bin"
export VIMBUNDLES="$HOME/.vimbundles"

#alias vim="/usr/local/Cellar/vim/7.3.333/bin/vim"
#alias vim="/usr/local/Cellar/macvim/7.3-61/MacVim.app/Contents/MacOS/Vim"
alias :e="vim"
alias :q="exit"

export gems="$GEM_HOME/gems"

## hcd command setup
get_repos_in_repo_dir() {
  cd $REPO_DIR
  find $(pwd -L)/ -type d -depth 1 | sed 's@//*@/@g'
}
add_repo_to_env() {
  [ -d "$1" ] && repos+="${1}" &&
  [ -z "$2" ] && repos+=":"
}

## setup repos env
repos=""
for repo in $(get_repos_in_repo_dir); do add_repo_to_env "$repo"; done

# add_repo_to_env "$REPO_DIR/fantasy"
# add_repo_to_env "$REPO_DIR/kikin"
# add_repo_to_env "$REPO_DIR/funding"
# add_repo_to_env "$REPO_DIR/cli-tracker"
# add_repo_to_env "$REPO_DIR/saveology"
# add_repo_to_env "$REPO_DIR/up2speed"
# add_repo_to_env "$REPO_DIR/iterat.org"
# add_repo_to_env "$REPO_DIR/anti.js"
# add_repo_to_env "$REPO_DIR/node_speed_rps"
# add_repo_to_env "$REPO_DIR/anshou.herokuapps.com"
# add_repo_to_env "$REPO_DIR/dotmatrix"
add_repo_to_env "$HOME/dot.jearsh"
add_repo_to_env "$HOME/lists" 1
echo "repos: $repos"
export repos

## bash completions
function _gcd() {
  cur=${COMP_WORDS[COMP_CWORD]}
  for a in ${repos//:/ }; do wordlist+="$(basename $a) "; done
  COMPREPLY=($(compgen -W "$wordlist" $cur))
}
complete -F _gcd gcd

function _gs() {
  cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=($(compgen -W "$(gs)" $cur))
}
complete -F _gs gs

function _gco() {
  cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=($(compgen -W "$(gb)" $cur))
}
complete -o default -F _gco gco

